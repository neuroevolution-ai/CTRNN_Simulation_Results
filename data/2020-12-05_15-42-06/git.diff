diff --git a/configurations/procgen.json b/configurations/procgen.json
index b965fe5..722c432 100644
--- a/configurations/procgen.json
+++ b/configurations/procgen.json
@@ -8,10 +8,10 @@
     "hof_size": 10,
     "checkpoint_frequency": 10,
     "initial_gene_range": 2,
-    "tournsize": 5,
+    "tournsize": 0,
     "mu": 10,
     "extra_from_hof": 1,
-    "lambda_": 30,
+    "lambda_": 100,
     "mutpb": 0.8,
     "efficiency_weight": 0.0,
     "fix_seed_for_generation": true,
@@ -27,14 +27,16 @@
       "normalize_input": false,
       "normalize_input_target": 0.0,
       "use_bias": false,
-      "conv_size1": 5,
-      "conv_feat1": 5,
-      "maxp_size1": 4,
-      "maxp_stride1": 4,
-      "conv_size2": 5,
-      "conv_feat2": 5,
-      "maxp_size2": 4,
-      "maxp_stride2": 1
+      "conv_size1": 3,
+      "conv_feat1": 3,
+      "conv_stride1": 3,
+      "maxp_size1": 2,
+      "maxp_stride1": 1,
+      "conv_size2": 4,
+      "conv_feat2": 10,
+      "conv_stride2": 1,
+      "maxp_size2": 2,
+      "maxp_stride2": 2
     },
     "ctrnn_conf": {
       "type": "CTRNN",
diff --git a/neuro_evolution_ctrnn/brains/CNN_CTRNN.py b/neuro_evolution_ctrnn/brains/CNN_CTRNN.py
index 395c633..5d369b1 100644
--- a/neuro_evolution_ctrnn/brains/CNN_CTRNN.py
+++ b/neuro_evolution_ctrnn/brains/CNN_CTRNN.py
@@ -107,10 +107,10 @@ class Cnn(nn.Module):
         # This method exists because DRY and convs are needed before create the individuals
         conv1 = nn.Conv2d(cls._number_input_channels, config.conv_feat1,
                           kernel_size=config.conv_size1,
-                          stride=1)
+                          stride=config.conv_stride1)
         conv2 = nn.Conv2d(config.conv_feat1, config.conv_feat2,
                           kernel_size=config.conv_size2,
-                          stride=1)
+                          stride=config.conv_stride2)
         return conv1, conv2
 
     @classmethod
@@ -125,9 +125,9 @@ class Cnn(nn.Module):
         w = input_space.shape[1]
         d = input_space.shape[2]
         assert d == cls._number_input_channels, "Wrong input shape. CNN expects 2D image with 3 colors channels"
-        h, w = cls._conv_output_shape(h_w=(h, w), kernel_size=config.conv_size1, stride=1)
+        h, w = cls._conv_output_shape(h_w=(h, w), kernel_size=config.conv_size1, stride=config.conv_stride1)
         h, w = cls._conv_output_shape(h_w=(h, w), kernel_size=config.maxp_size1, stride=config.maxp_stride1)
-        h, w = cls._conv_output_shape(h_w=(h, w), kernel_size=config.conv_size2, stride=1)
+        h, w = cls._conv_output_shape(h_w=(h, w), kernel_size=config.conv_size2, stride=config.conv_stride2)
         h, w = cls._conv_output_shape(h_w=(h, w), kernel_size=config.maxp_size2, stride=config.maxp_stride2)
         return Box(-1, 1, (h, w, config.conv_feat2), np.float32)
 
diff --git a/neuro_evolution_ctrnn/tools/configurations.py b/neuro_evolution_ctrnn/tools/configurations.py
index 54bdeed..a20edd1 100644
--- a/neuro_evolution_ctrnn/tools/configurations.py
+++ b/neuro_evolution_ctrnn/tools/configurations.py
@@ -86,6 +86,8 @@ class ConvolutionalNNCfg(IBrainCfg):
     conv_feat2: int
     maxp_size2: int
     maxp_stride2: int
+    conv_stride1: int = 1
+    conv_stride2: int = 1
 
 
 @attr.s(slots=True, auto_attribs=True, frozen=True)
